{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dataservice.service.ts","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup/setup.component'\n\nconst routes: Routes = [\n { path: 'setup', component: SetupComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { DataserviceService } from './dataservice.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'sectional-webapp';\n\n  constructor() { \n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SetupComponent } from './setup/setup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatDividerModule} from '@angular/material/divider'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SetupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError } from 'rxjs/operators' \nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http' \n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataserviceService {\n\n  constructor( private http: HttpClient ) { \n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n  public get_pixelcount() : Observable<any> { \n    return this.http.get('/api/pixelcount').pipe(catchError(this.handleError))\n  }\n\n  public set_pixelcount(pixelcount: number) : any { \n    return this.http.post('/api/pixelcount', { 'pixelcount': pixelcount }).pipe(catchError(this.handleError))\n  }\n\n  public selftest() { \n    return this.http.post('/api/selftest', null).pipe(catchError(this.handleError))\n  }\n\n  public getairportforpixel(idx: number) { \n    return this.http.get('/api/pixel/'+idx).pipe(catchError(this.handleError))\n  }\n  \n  public setairportforpixel(idx: number, airport: string) { \n    return this.http.post('/api/pixel/'+idx, { 'icao_airport_code': airport }).pipe(catchError(this.handleError))\n  }\n\n  public setpixelcolor(idx: number, color: string) { \n    return this.http.post('/api/setpixel/'+idx, { 'color': color }).pipe(catchError(this.handleError))\n  }\n\n  public clearpixels() { \n    return this.http.post('/api/clearpixels', {}).pipe(catchError(this.handleError))\n  }\n\n  public airportsearch(value: string) {\n    return this.http.get('/api/airportsearch',{ params: { 'q': value } }).pipe(catchError(this.handleError))\n  }\n\n  public setupcomplete(val:boolean) { \n    return this.http.post('/api/setup_complete', { 'setup_complete': true }).pipe(catchError(this.handleError))\n\n  }\n  public load_metar(airport: string) {\n    return this.http.get('/api/metar/'+airport).pipe(catchError(this.handleError))\n  }\n\n  public get_airports() : any { \n  \treturn this.http.get('/api/airports')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms'\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { DataserviceService } from '../dataservice.service'\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete'\nimport { debounceTime, tap, switchMap, finalize, filter } from 'rxjs/operators';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner'\n\ninterface AirportForPixelResponse {\n  icao_airport_code: string\n}\n\ninterface MetarResponse {\n  icao_airport_code: string\n  metar: string\n}\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss'],\n})\n\nexport class SetupComponent implements OnInit {\n  public initialSetupFormGroup: FormGroup\n  public airportSelectionFormGroup: FormGroup\n  public ledCount: number = 0\n  public filteredAirports = []\n  public isLoading = false\n  public errorMsg = \"\"\n  public pixelCount = 0\n  public pixelIndex = 0\n  public metar: string = null\n  public metar_loading: boolean = false\n  public metar_error: string = null\n\n  constructor(private dataservice: DataserviceService, private formBuilder: FormBuilder) {\n    this.initialSetupFormGroup = this.formBuilder.group({\n      pixelcount: [null, [Validators.required, Validators.min(1), Validators.max(999)]]\n    });\n\n    this.airportSelectionFormGroup = this.formBuilder.group({\n      airport: [null, [Validators.required, this.RequireMatch]]\n    });\n  }\n\n  completeSetup() { \n    this.dataservice.setupcomplete(true).subscribe()\n  }\n\n\n  stepChanged(event: StepperSelectionEvent) {\n    if (event.selectedStep.label == \"setpixelcount\") {\n\n    } else if (event.selectedStep.label == \"testleds\") {\n      this.dataservice.selftest().subscribe()\n\n    } else if (event.selectedStep.label == \"airportassignment\") {\n      this.dataservice.clearpixels().subscribe()\n      this.pixelIndex = 0\n      this.loadPixelData()\n    } else if (event.selectedStep.label == \"finish\") {\n\n    }\n\n  }\n\n  loadPixelData() {\n    this.metar = null\n    this.metar_error = null\n    this.metar_loading = null;\n\n    this.dataservice.setpixelcolor(this.pixelIndex, '#f00').subscribe()\n    this.dataservice.getairportforpixel(this.pixelIndex).subscribe((data: AirportForPixelResponse) => {\n      this.loadMetar(data.icao_airport_code)\n      this.airportSelectionFormGroup.get('airport').setValue(data)\n      this.airportSelectionFormGroup.markAsUntouched()\n    })\n\n  }\n\n  nextPixel() {\n    if (!this.airportSelectionFormGroup.valid && !this.airportSelectionFormGroup.pristine) {\n      this.airportSelectionFormGroup.markAllAsTouched()\n      return\n    }\n\n    if (this.airportSelectionFormGroup.get('airport').value != null) {\n      this.dataservice.setairportforpixel(this.pixelIndex, this.airportSelectionFormGroup.get('airport').value.icao_airport_code).subscribe()\n    }\n\n    this.dataservice.setpixelcolor(this.pixelIndex, '#000').subscribe()\n\n    if (this.pixelIndex < this.pixelCount) {\n      this.pixelIndex = this.pixelIndex + 1\n      this.loadPixelData()\n    }\n  }\n\n  previousPixel() {\n    if (!this.airportSelectionFormGroup.valid && !this.airportSelectionFormGroup.pristine) {\n      this.airportSelectionFormGroup.markAllAsTouched()\n      return\n    }\n\n    if (this.airportSelectionFormGroup.get('airport').value != null) {\n      this.dataservice.setairportforpixel(this.pixelIndex, this.airportSelectionFormGroup.get('airport').value.icao_airport_code).subscribe()\n    }\n    this.dataservice.setpixelcolor(this.pixelIndex, '#000').subscribe()\n\n    if (this.pixelIndex > 0) {\n      this.pixelIndex = this.pixelIndex - 1\n      this.loadPixelData()\n    }\n  }\n\n  displayFn(obj: any) {\n    return obj ? obj.icao_airport_code : ''\n  }\n\n  airportSelected(event: MatAutocompleteSelectedEvent) {\n    this.loadMetar(event.option.value.icao_airport_code)\n  }\n\n  RequireMatch(control: AbstractControl) {\n    const selection: any = control.value;\n    if (typeof selection === 'string') {\n      return { incorrect: true };\n    }\n    return null;\n  }\n\n  loadMetar(icao_airport_code: string) {\n    if (icao_airport_code == null) {\n      return\n    }\n    this.metar_loading = true\n    this.metar = null\n    this.metar_error = null\n    this.dataservice.load_metar(icao_airport_code).subscribe((results: MetarResponse) => {\n      this.metar_loading = false\n      this.metar = results.metar\n    }, (error) => {\n      this.metar_error = \"Unable to load METAR for \" + icao_airport_code\n      this.metar = null\n      this.metar_loading = false\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.airportSelectionFormGroup.get('airport').valueChanges\n      .pipe(\n        debounceTime(500),\n        filter((x: string) => x && x.length >= 2),\n\n        tap(() => {\n          this.errorMsg = \"\";\n          this.filteredAirports = [];\n          this.isLoading = true;\n        }),\n        switchMap(value => this.dataservice.airportsearch(value)\n          .pipe(\n            finalize(() => {\n              this.isLoading = false\n            }),\n          )\n        )\n      )\n      .subscribe(data => {\n        if (data == undefined) {\n          this.errorMsg = \"Unable to get airport data\"\n          this.filteredAirports = [];\n        } else {\n          this.errorMsg = \"\";\n          this.filteredAirports = data as any[]\n        }\n      });\n\n    this.dataservice.get_pixelcount().subscribe((data) => {\n      this.pixelCount = data.pixelcount\n      this.initialSetupFormGroup.get(\"pixelcount\").setValue(data.pixelcount)\n    })\n  }\n}\n","<mat-vertical-stepper #stepper (selectionChange)=\"stepChanged($event)\">\n  <mat-step [stepControl]=\"initialSetupFormGroup\" label=\"setpixelcount\">\n    <form [formGroup]=\"initialSetupFormGroup\">\n      <ng-template matStepLabel>Number of LEDs</ng-template>\n      <p class=\"mat-body\">First, let us enter how many LEDS you have configured on the map.</p>\n      <mat-form-field>\n        <mat-label>Pixel Count</mat-label>\n        <input matInput placeholder=\"Pixel Count\" formControlName=\"pixelcount\" required>\n        <mat-error>\n          Value must be between 0 and 999\n        </mat-error>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n\n  <mat-step label=\"testleds\">\n    <ng-template matStepLabel>Testing LEDs</ng-template>\n    <p>We are now running a self test on all the LEDs. Please make sure they are all working.</p>\n    <div>\n      <button mat-button-raised matStepperNext>Continue</button>\n    </div>\n  </mat-step>\n\n  <mat-step label=\"airportassignment\">\n    <ng-template matStepLabel>Airport Assignment</ng-template>\n    <p>We will now go through each LED and specify the airport it represents. The current METAR will be loaded and\n      displayed. You obviously only want to include airports where METARS are available.</p>\n    <section>\n      <h2>{{ pixelIndex + 1 }} of {{ pixelCount }}</h2>\n      <form [formGroup]=\"airportSelectionFormGroup\">\n        <mat-form-field>\n          <mat-hint>name or icao identifier</mat-hint>\n          <input matInput placeholder=\"Airport Identifier\" aria-label=\"Airport\" [matAutocomplete]=\"auto\"\n            formControlName=\"airport\">\n          <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"airportSelected($event)\"\n            [displayWith]=\"displayFn\">\n            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\n            <ng-container *ngIf=\"!isLoading\">\n              <mat-option *ngFor=\"let airport of filteredAirports\" [value]=\"airport\">\n                <span><b>{{airport.icao_airport_code}}</b> ({{airport.name}})</span>\n              </mat-option>\n            </ng-container>\n          </mat-autocomplete>\n          <mat-error>\n            Not a valid airport\n          </mat-error>\n        </mat-form-field>\n        <span>\n          <mat-progress-spinner *ngIf=\"metar_loading\" diameter=\"40\" strokeWidth=\"5\" class=\"spinner\"\n            mode=\"indeterminate\"></mat-progress-spinner>\n        </span>\n        <span *ngIf=\"metar\">\n          <span id=\"metar-icon\" class=\"material-icons success\">check_circle</span>\n          {{ metar }}\n        </span>\n        <span *ngIf=\"metar_error\">\n          <span id=\"metar-icon\" class=\"material-icons failure\">error</span>\n          {{metar_error}}\n        </span>\n      </form>\n\n      <button mat-raised-button (click)=\"previousPixel()\">Prev Pixel</button>\n      <button mat-raised-button (click)=\"nextPixel()\">Next Pixel</button>\n    </section>\n    <mat-divider></mat-divider>\n    <section>\n      <button mat-raised-button color=\"primary\" matStepperNext>Continue</button>\n    </section>\n  </mat-step>\n\n  <mat-step label=\"finish\">\n    <ng-template matStepLabel>Done</ng-template>\n    <p>Setup is complete. Click Finish to save and start the map.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"completeSetup()\">Finish</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}